function [f] = objective_ALE_multiv_XY_plus_min_spacing(q,...
    kM, Flag, ...
    x_0_downsampled, y_0_downsampled, X_E_FOM_multi, ...
    Gamma_0_M, Gamma_x, Gamma_y, Gamma_t, ...
      min_grid_spacing_fine, penalty_in_min_spacing, Nx, Ny)
% Without grid spacing enforcing
[f, M_x_ALE, M_y_ALE, size_x, size_y] = objective_ALE_multiv_XY(q,...
    kM, Flag, ...
    x_0_downsampled, y_0_downsampled, X_E_FOM_multi, ...
    Gamma_0_M, Gamma_x, Gamma_y, Gamma_t);
% Grid spacing
diffx = diff( M_x_ALE );
diffx = diffx(:);
epsix = min_grid_spacing_fine*(Nx/size_x);
diffy = diff( M_y_ALE );
diffy = diffy(:);
epsiy = min_grid_spacing_fine*(Ny/size_y);

f4 = [penalty_in_min_spacing * ( abs(diffx-epsix)-(diffx-epsix) ) ; ...
      penalty_in_min_spacing * ( abs(diffy-epsiy)-(diffy-epsiy) ) ];

f = [ f; f4(:)];
end